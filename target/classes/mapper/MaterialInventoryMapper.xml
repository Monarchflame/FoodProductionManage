<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.qxt.dao.MaterialInventoryDao">
    <resultMap id="BaseResultMap" type="cn.qxt.pojo.MaterialInventory">
        <id column="Id" jdbcType="INTEGER" property="id" />
        <result column="material_id" jdbcType="INTEGER" property="material_id" />
        <result column="quantity" jdbcType="INTEGER" property="quantity" />
        <result column="expiration_time" jdbcType="TIMESTAMP" property="expiration_time" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        Id, material_id, quantity, expiration_time
    </sql>
    <select id="selectByExample" parameterType="cn.qxt.pojo.MaterialInventoryExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List" />
        from material_inventory
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from material_inventory
        where Id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from material_inventory
        where Id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="cn.qxt.pojo.MaterialInventory">
        insert into material_inventory (Id, material_id, quantity,
                                        expiration_time)
        values (#{id,jdbcType=INTEGER}, #{material_id,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER},
                #{expiration_time,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.qxt.pojo.MaterialInventory">
        insert into material_inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                Id,
            </if>
            <if test="material_id != null">
                material_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="expiration_time != null">
                expiration_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="material_id != null">
                #{material_id,jdbcType=INTEGER},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="expiration_time != null">
                #{expiration_time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.qxt.pojo.MaterialInventory">
        update material_inventory
        <set>
            <if test="material_id != null">
                material_id = #{material_id,jdbcType=INTEGER},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="expiration_time != null">
                expiration_time = #{expiration_time,jdbcType=TIMESTAMP},
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.qxt.pojo.MaterialInventory">
        update material_inventory
        set material_id = #{material_id,jdbcType=INTEGER},
            quantity = #{quantity,jdbcType=INTEGER},
            expiration_time = #{expiration_time,jdbcType=TIMESTAMP}
        where Id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectMaterialInventoryInfoById" parameterType="java.lang.Integer" resultType="java.util.Map">
        select material.id as material_id, name, material_inventory.quantity as quantity, expiration_time, material_record.create_time, material_inventory.Id as inventory_id
        from material
                 join material_record
                      on material_id = material.id
                 join material_inventory
                      on material_inventory.material_id = material.id
        where material_inventory.Id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectMaterialInventoryInfoByMaterialId" parameterType="java.lang.Integer" resultType="java.util.Map">
        select material.id as material_id, name, material_inventory.quantity as quantity, expiration_time, material_record.create_time, material_inventory.Id as inventory_id
        from material
                 join material_record
                      on material_id = material.id
                 join material_inventory
                      on material_inventory.material_id = material.id
        where material_inventory.material_id = #{id,jdbcType=INTEGER}
    </select>
</mapper>